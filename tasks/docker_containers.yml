- name: Ensure docker-image files are present
  become: no
  ansible.posix.synchronize:
    src: "./files/docker-images"
    dest: "/home/{{ username }}/"
    private_key: "{{ ansible_ssh_private_key_file }}"
    use_ssh_args: yes
    archive: no
    recursive: yes
    checksum: yes
    rsync_opts:
      - "--exclude=.env"                           # this uses a template (this file)
      - "--exclude=gitea/app.ini.j2"               # this uses a template (containers/gitea.yml)
      - "--exclude=website/repo"                   # this uses git role   (containers/website.yml)
      - "--exclude=school-docs/repo"               # this uses git role   (containers/school-docs.yml)

- name: Ensure .env file for docker-compose is generated
  template:
    src: "./files/dotenv.j2"
    dest: "/home/{{ username }}/docker-images/.env"

- name: Ensure docker volumes are created
  community.docker.docker_volume:
    volume_name: "{{ item }}"
    state: "present"
  loop:
    - gitea-data
    - portainer-data
    - vaultwarden-data
    - traefik-logs
    - traefik-certs
    - kuma-data

- name: Ensure docker network is created
  community.docker.docker_network:
    name: my-bridge

- import_tasks: ./tasks/containers/bitwarden.yml
- import_tasks: ./tasks/containers/portainer.yml
- import_tasks: ./tasks/containers/school-docs.yml
- import_tasks: ./tasks/containers/traefik.yml
- import_tasks: ./tasks/containers/website-janina.yml
- import_tasks: ./tasks/containers/website-jannik.yml
