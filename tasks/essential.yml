- name: Update packages
  apt:
    update_cache: yes
    upgrade: yes
    cache_valid_time: 3600

- name: Install common packages
  apt:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
    - zsh
    - gcc
    - g++
    - vim
    - jq
    - git
    - cloc
    - ffmpeg
    - curl
    - wget
    - net-tools
    - python3
    - lua5.3
    - sqlite3
    - neofetch
    - ca-certificates
    - gnupg
    - lsb-release
    - python3-pip
    - python3-docker

- name: Add an apt signing key for Docker
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add apt repository for stable version
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
    state: present

- name: Install Docker
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - docker-ce
    - docker-ce-cli
    - containerd.io

# the docker-compose things are a bit ugly, but I haven't yet found a way to improve this

- name: "Check docker-compose is not installed"
  stat: path=/usr/local/bin/docker-compose
  register: docker_compose_global

- name: "Download docker-compose {{ docker_compose_version }}"
  get_url:
    url : https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64
    dest: ~/docker-compose
    mode: '+x'
  vars:
    docker_compose_version: "1.29.2"
  when: not docker_compose_global.stat.exists

- name: "Check docker-compose was downloaded"
  stat: path=~/docker-compose
  register: docker_compose

- name: Move docker-compose to /usr/local/bin/docker-compose
  command: mv ~/docker-compose /usr/local/bin/docker-compose
  when: docker_compose.stat.exists

- name: "Add {{ username }} to docker group"
  user:
    name: "{{ username }}"
    group: docker

- name: ensure ssh password login is disabled
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "^#PasswordAuthentication yes"
    line: "PasswordAuthentication no"
  register: sshd_config

- name: Ensure ssh daemon has been restarted
  service:
    name: sshd
    state: restarted
  when: sshd_config.changed

- name: Ensure systemd-resolved is disabled and stopped
  service:
    name: systemd-resolved
    state: stopped
    enabled: no

- stat:
    path: "/etc/resolv.conf"
  register: resolv_conf

- name: Ensure old resolv.conf file is removed
  file:
    path: "/etc/resolv.conf"
    state: absent
  when: resolv_conf.stat.islnk is defined and resolv_conf.stat.islnk

- name: Ensure new resolv.conf file is added
  copy:
    content: |
      nameserver {{ primary_nameserver }}
      nameserver {{ secondary_nameserver }}
    dest: "/etc/resolv.conf"
  vars:
    primary_nameserver: "8.8.8.8"
    secondary_nameserver: "8.8.4.4"

- name: Ensure docker-data folder exists
  file:
    path: "/home/{{ username }}/docker-data"
    state: directory

- name: Ensure docker-data folder is set correctly
  lineinfile:
    dest: /lib/systemd/system/docker.service
    regexp: "ExecStart=/usr/bin/dockerd -H fd:// --containerd"
    line: "ExecStart=/usr/bin/dockerd -H fd:// --data-root=/home/{{ username }}/docker-data --containerd"
  register: docker_service

- name: Ensure docker daemon is restarted if needed
  service:
    name: docker
    state: restarted
    daemon_reload: yes
  when: docker_service.changed

- name: Ensure docker python SDK is installed
  community.general.python_requirements_info:
    dependencies:
      - "docker>5.0.3"
